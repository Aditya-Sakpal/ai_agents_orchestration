[tool.poetry]
name = "backend"
version = "0.0.1"
description = "A dual-mode (API and Voice) AI-powered application for Q&A and appointment scheduling, leveraging hierarchical agents, knowledge graph retrieval, and integrated calendar management."
authors = ["Vikash Pathak <vikash@sellcx.com>"]
readme = "README.md"
packages = [
    { include = "../backend"},
]

[tool.poetry.dependencies]
python = "^3.11"
streamlit = "^1.41.1"
langchain = ">=0.3.15,<1.0"
langchain-core  = "^0.3.31"
google-api-python-client = "^2.137.0"
google-auth-httplib2 = "^0.2.0"
google-auth-oauthlib = "^1.2.1"
python-dotenv = "^1.0.1"
langgraph = "^0.5.0"
langchain-openai = "^0.3.1"
langchain-neo4j = "^0.3.0"
loguru = "^0.7.2"
langchain-experimental = "^0.3.4"
bs4 = "^0.0.2"
neo4j = "^5.27.0"
aiosqlite = "^0.20.0"
livekit-agents = {extras = ["cartesia", "deepgram", "openai", "silero", "turn-detector"], version = "^1.1.6"}
livekit-plugins-openai = "^1.0.0"
livekit-plugins-deepgram = "^1.0.0"
livekit-plugins-silero = "^1.0.0"
livekit-plugins-elevenlabs = "^1.0.0"
livekit-plugins-noise-cancellation = "^0.2.0"
livekit-plugins-langchain = "^1.0.0"
psycopg2-binary = "^2.9.9"
twilio = "^9.2.4"
dotty-dictionary = "^1.2.0"
elevenlabs = "^1.7.0"
fastapi = "^0.114.2"
uvicorn = "^0.30.6"
pydantic = "^2.10.6"
redis = "^5.0.8"
requests = "^2.32.3"
langgraph-supervisor = "^0.0.2"
langgraph-prebuilt = "^0.5.2"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = ["docs"]

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0621",  # redefined-outer-name
    "W0614",  # unused-wildcard-import
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "st"]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]